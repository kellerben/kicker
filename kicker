#!/usr/bin/env node

const winston = require("winston");
const { combine, timestamp, label, printf } = winston.format;

// ------------ set logger -----------{{{
const loggerFormat = printf(info => {
	return `${info.timestamp} [${info.level}]: ${info.message}`;
});

const logger = winston.createLogger({
	level: "info",
	transports: [
		new winston.transports.File({
			filename: "/var/log/nodejs/nodejs.log",
			handleExceptions: true,
			humanReadableUnhandledException: true,
			json: false
		})
	],
	format: combine(timestamp(), loggerFormat)
});
//}}}

var express = require('express');
var bodyParser = require("body-parser");
var app = express();
var urlencodedParser = bodyParser.urlencoded({ extended: false })

var score;
var players;
function randomNames(){
	score.nw.name = "Ben";
	score.sw.name = "Tom";
	score.so.name = "Felix";
}
app.post('/randomNames', function(req,res){
	randomNames();
	sendAll(JSON.stringify(score));
});
function reset(){
	score = {
		nw: {name: "", points: 0, position: "nw"},
		so: {name: "", points: 0, position: "so"},
		sw: {name: "", points: 0, position: "sw"},
		rounds: 0
	};
}
reset();
app.post('/reset', function(req,res){
	reset();
	sendAll(JSON.stringify(score));
});
app.post('/goal', urlencodedParser,function(req,res){
	if (req.body.scorer[0] == "n") {// Point for the single one
		score[req.body.scorer].points += 1;
	} else { // Change positions
		var newscore = {};
		score["rounds"] += 1;
		newscore["rounds"] = score["rounds"];
		newscore["nw"] = score["so"];
		if (score["rounds"] % 3 != 0) { // rotate 2 players every 3 rounds
			newscore["so"] = score["sw"];
			newscore["sw"] = score["nw"];
		} else {
			newscore["so"] = score["nw"];
			newscore["sw"] = score["sw"];
		}
		score = newscore;
		score["nw"].position = "nw";
		score["so"].position = "so";
		score["sw"].position = "sw";
	}
	res.setHeader('Content-Type', 'application/json');
	res.end(JSON.stringify(score));
	sendAll(JSON.stringify(score));
});
var server = app.listen(8080, '127.0.0.1');

// ------------------- open websocket -------------------
const WebSocket = require("ws");

const wss = new WebSocket.Server({ port: 8081 });

wss.on("connection", function connection(ws, req) {
	//handle receiving a message{{{
	ws.on("message", function incoming(message) {
		m = JSON.parse(message);
		score[m.position].name = m.name;
		sendAll(JSON.stringify(score));
	});//}}}
	//handle errors{{{
	ws.on("error", error => {
		logger.error(String(error));
	});//}}}
	ws.send(JSON.stringify(score));
});

function sendAll(data) {
	wss.clients.forEach(function each(client) {
		if (client.readyState === WebSocket.OPEN) {
			client.send(data);
		}
	});
}


// vim: set ft=javascript:
